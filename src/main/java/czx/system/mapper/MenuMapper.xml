<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  

<mapper namespace="czx.system.dao.MenuDao">
	<resultMap type="czx.system.bean.Menu" id="menu">
		<result column="id" property="id" javaType="INT" jdbcType="INTEGER" />
		<result column="pid" property="pid" javaType="INT" jdbcType="INTEGER" />
		<result column="text" property="text" javaType="String" jdbcType="VARCHAR" />
		<result column="url" property="url" javaType="String" jdbcType="VARCHAR" />
		<result column="targetType" property="targetType" javaType="String" jdbcType="VARCHAR" />
		<result column="icon" property="icon" javaType="String" jdbcType="VARCHAR" />
		<result column="sort" property="sort" javaType="INT" jdbcType="INTEGER" />
		<result column="isHeader" property="isHeader" javaType="String" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="menuTreeList" type="czx.system.bean.MenuItem">
		<result column="id" property="id" javaType="String" jdbcType="VARCHAR" />
		<result column="parent" property="parent" javaType="String" jdbcType="VARCHAR" />
		<result column="text" property="text" javaType="String" jdbcType="VARCHAR" />
		<result column="url" property="url" javaType="String" jdbcType="VARCHAR" />
		<result column="targetType" property="targetType" javaType="String" jdbcType="VARCHAR" />
		<result column="type" property="type" javaType="String" jdbcType="VARCHAR" />
		<result column="children" property="children" javaType="boolean" jdbcType="VARCHAR" />
		<result column="icon" property="icon" javaType="String" jdbcType="VARCHAR" />
		<result column="sort" property="sort" javaType="INT" jdbcType="INTEGER" />
		<result column="isleaf" property="isleaf" javaType="INT" jdbcType="INTEGER" />
	</resultMap>
	
	<resultMap type="czx.system.bean.Role" id="role">
		<result property="roleId" column="roleid" javaType="int" jdbcType="INTEGER"/>
		<result property="roleName" column="rolename" javaType="string" jdbcType="VARCHAR"/>
		<result property="roleType" column="roleType" javaType="int" jdbcType="INTEGER"/>
		<result property="roleLevel" column="roleLevel" javaType="int" jdbcType="INTEGER"/>
		<result property="roleOperateLevel" column="roleOperateLevel" javaType="int" jdbcType="INTEGER"/>
	</resultMap>
	
	<resultMap type="czx.system.bean.Fun" id="fun">
		<result property="funId" column="funid" javaType="int" jdbcType="INTEGER"/>
		<result property="funName" column="funname" javaType="String" jdbcType="VARCHAR"/>
		<result property="icon" column="icon" javaType="String" jdbcType="VARCHAR"/>
		<result property="qtip" column="qtip" javaType="String" jdbcType="VARCHAR"/>
		<result property="menuId" column="menuId" javaType="int" jdbcType="INTEGER"/>
		<result property="funtypeId" column="funtypeId" javaType="int" jdbcType="INTEGER"/>
		<result property="orders" column="orders" javaType="int" jdbcType="INTEGER"/>
		<result property="cls" column="cls" javaType="String" jdbcType="VARCHAR"/>
		<result property="url" column="url" javaType="String" jdbcType="VARCHAR"/>
	</resultMap>
	
	
	<select id="queryMenuList" resultMap="menu">
		<!-- select distinct a.id,a.pid,a.text,a.url,a.icon,a.targetType,a.sort,a.isHeader,a.isLeaf 
		from sys_menu a,sys_role_menu b,sys_role_user c
		where a.id=b.menuid and b.roleid=c.roleid and c.userid=#{userId}
		order by a.sort
		 -->
		select id,pid,text,url,icon,targetType,sort,isHeader,isLeaf  from (
			select distinct a.id,a.pid,a.text,a.url,a.icon,a.targetType,a.sort,a.isHeader,a.isLeaf 
			from sys_menu a,sys_role_menu b,sys_role_user c
			where a.id=b.menuid and b.roleid=c.roleid and c.userid=#{userId}
			union  
			select t.id,t.pid,t.text,t.url,t.icon,t.targetType,t.sort,t.isHeader,t.isLeaf from sys_menu t where id in(
			select distinct a.pid
			from sys_menu a,sys_role_menu b,sys_role_user c
			where a.id=b.menuid and b.roleid=c.roleid and c.userid=#{userId})
		) t order by sort
	</select>
	
	<select id="queryMenuTreeChildren" resultMap="menuTreeList">
		select id,pid as parent,text,url,targetType,
		if(isleaf= 1, '', 'root') type,
		if(isleaf= 0, 'true', 'false') children,
		icon,sort,isleaf 
		from sys_menu
		where pid = #{param1}
		order by sort
	</select>
	
	<select id="isexist" resultMap="menu">
		select id from sys_menu where id=#{id}
	</select>
	
	<insert id="addMenu">
		insert into sys_menu (id,pid,text,url,targetType,icon,sort,isleaf) values
		(#{id},#{parent},#{text},#{url},#{targetType},#{icon},#{sort},#{isleaf})
	</insert>
	
	<update id="updateMenu">
		update sys_menu
		set text = #{text},
			url = #{url},
			targetType = #{targetType},
			icon = #{icon},
			sort = #{sort},
			isleaf = #{isleaf}
		where id=#{id}
	</update>
	
	<delete id="deleteMenu">
		delete from sys_menu where id=#{param1}
	</delete>
	
	<select id="getMenuRoleByMenuId" resultMap="role">
		select a.roleid,a.rolename,b.checked from sys_role a 
		left join sys_role_menu b
		on a.roleid=b.roleid and b.menuid=#{param1}
	</select>
	
	<delete id="deleteMenuRole">
		delete from sys_role_menu where menuId = #{param1} 
	</delete>
	
	<insert id="addMenuRole">
		insert into sys_role_menu (menuid,roleid,checked) values
		<foreach collection="list" index="index" item="item" separator=",">
		 ( #{menuId},#{item},1 )
		</foreach>
	</insert>
	
	<select id="queryFunByMenuId" resultMap="fun">
		select funid,funname,icon,qtip,menuId,funtypeId,orders,cls,url 
		from sys_function where menuId=#{param1}
		<if test="param2!=-1">
			limit ${param2},${param3}
		</if>
	</select>
	
	<select id="isexistFun" resultMap="fun">
		select funid from sys_function where funid=#{funId}
	</select>
	
	<insert id="addMenuFun">
		insert into sys_function(funid,funname,icon,qtip,menuId,funtypeId,orders,cls,url)
		values (#{funId},#{funName},#{icon},#{qtip},#{menuId},#{funtypeId},#{orders},#{cls},#{url})
	</insert>
	
	<update id="updateMenuFun">
		update sys_function
		set funname=#{funName},
			icon=#{icon},
			qtip=#{qtip},
			funtypeId=#{funtypeId},
			orders=#{orders},
			cls=#{cls},
			url=#{url}
		where funId=#{funId}
	</update>
	
	<delete id="deleteMenuFun">
		delete from sys_function
		where funid in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			${item}
		</foreach>
	</delete>
	
</mapper>
